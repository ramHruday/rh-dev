{"version":3,"sources":["components/TypingEffectTitle.tsx","components/HeroSection.tsx","data/projectsData.ts","components/ProjectSection.tsx","hooks/useProjectFiltering.ts","data/skillsData.ts","components/SkillsSection.tsx","contexts/theme-context.tsx","components/ContactSection.tsx","components/SideNavigation.tsx","components/ThemeToggleButton.tsx","components/LandingPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TypingEffectTitle","_ref","messages","typingSpeed","delayBetweenMessages","currentMessageIndex","setCurrentMessageIndex","useState","currentText","setCurrentText","isTyping","setIsTyping","useEffect","timer","length","setTimeout","slice","prev","clearTimeout","React","createElement","className","HeroSection","id","Container","Row","Col","Button","variant","href","projectsData","label","desc","tags","category","img","githubUrl","url","ProjectSection","selectedCategory","setSelectedCategory","allCategories","featuredProjectLabels","selectedTags","setSelectedTags","baseProjects","useMemo","filter","project","includes","allTags","Array","from","Set","flatMap","map","Boolean","filteredProjects","matchesCategory","matchesTags","some","tag","useProjectFiltering","xs","Accordion","alwaysOpen","categoryIndex","Item","eventKey","String","key","Header","Body","onClick","md","lg","index","Card","Title","Text","tech","techIndex","Footer","target","rel","GitHub","size","ExternalLink","skillsData","skills","name","iconUrl","SkillsSection","skill","skillIndex","sm","Img","src","concat","process","alt","ThemeContext","createContext","useTheme","useContext","ThemeContextProvider","children","isLight","setIsLight","storedTheme","localStorage","getItem","window","matchMedia","matches","currentTheme","document","body","setItem","Provider","value","theme","toggleTheme","prevIsLight","ContactSection","cursorLogo","Linkedin","Mail","style","fontSize","color","textDecoration","height","marginRight","verticalAlign","navLinks","to","icon","Home","User","Folder","Award","socialLinks","SideNavigation","activeHash","setActiveHash","handleScroll","sections","link","getElementById","substring","scrollPosition","scrollY","innerHeight","i","section","offsetTop","addEventListener","removeEventListener","NavHashLink","smooth","aria-label","ThemeToggleButton","Moon","Sun","LandingPage","fluid","App","location","hostname","match","ReactDOM","render","BrowserRouter","basename","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd6ee0ee.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TypingEffectTitle.scss';\r\n\r\ninterface TypingEffectTitleProps {\r\n  messages: string[];\r\n  typingSpeed?: number;\r\n  delayBetweenMessages?: number;\r\n}\r\n\r\nconst TypingEffectTitle: React.FC<TypingEffectTitleProps> = ({\r\n  messages,\r\n  typingSpeed = 60,\r\n  delayBetweenMessages = 1500,\r\n}) => {\r\n  const [currentMessageIndex, setCurrentMessageIndex] = useState(0);\r\n  const [currentText, setCurrentText] = useState('');\r\n  const [isTyping, setIsTyping] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let timer: NodeJS.Timeout;\r\n\r\n    if (isTyping) {\r\n      if (currentText.length < messages[currentMessageIndex].length) {\r\n        timer = setTimeout(() => {\r\n          setCurrentText(messages[currentMessageIndex].slice(0, currentText.length + 1));\r\n        }, typingSpeed);\r\n      } else {\r\n        // Pause after full message typed\r\n        timer = setTimeout(() => {\r\n          setIsTyping(false);\r\n        }, delayBetweenMessages);\r\n      }\r\n    } else {\r\n      // Move to next message after pause\r\n      timer = setTimeout(() => {\r\n        setCurrentMessageIndex((prev) => (prev + 1) % messages.length);\r\n        setCurrentText('');\r\n        setIsTyping(true);\r\n      }, 500); // Short break before next message starts typing\r\n    }\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [currentText, isTyping, currentMessageIndex, messages, typingSpeed, delayBetweenMessages]);\r\n\r\n  return (\r\n    <span className=\"typing-effect-title\">\r\n      {currentText}\r\n      <span className=\"typing-cursor\">|</span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TypingEffectTitle;\r\n","import React from \"react\";\r\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\r\nimport TypingEffectTitle from \"./TypingEffectTitle\"; // Assuming this is a custom typing effect component\r\nimport \"./HeroSection.scss\";\r\n\r\ninterface HeroSectionProps {\r\n  id?: string;\r\n}\r\n\r\nconst HeroSection: React.FC<HeroSectionProps> = ({ id }) => {\r\n  const roleMessages = [\r\n    \"Turning data into actionable insights.\",\r\n    \"Building smooth and responsive user interfaces.\",\r\n    \"Exploring automation through robotics.\",\r\n    \"Designing scalable cloud-native data pipelines.\",\r\n    \"Committed to reliable and maintainable software.\",\r\n  ];\r\n\r\n  return (\r\n    <section\r\n      id={id}\r\n      className=\"hero-section-container d-flex align-items-center\"\r\n    >\r\n      <Container className=\"text-center\">\r\n        <Row>\r\n          <Col>\r\n            {/* Main greeting */}\r\n            <h1 className=\"display-3 fw-bold mb-3 hero-title\">\r\n              Hi, I'm <span className=\"highlight\">Rama Hruday</span>\r\n            </h1>\r\n\r\n            {/* Typing effect directly under name */}\r\n            <h2 className=\"lead hero-typing-effect mb-4\">\r\n              <TypingEffectTitle messages={roleMessages} />\r\n            </h2>\r\n\r\n            {/* Short tagline */}\r\n            <p className=\"lead hero-tagline mb-3 w-75 mx-auto\">\r\n              Data Engineer | Frontend Developer | Robotics Enthusiast\r\n            </p>\r\n\r\n            {/* Expanded description */}\r\n            <p className=\"hero-description mb-4 w-75 mx-auto\">\r\n              I focus on building scalable, cloud-native data systems and intuitive\r\n              user experiences that empower real-time analytics and support business\r\n              needs. Experienced in PySpark, Flink, Delta Lake, and modern lakehouse\r\n              architectures, I strive to deliver reliable and efficient solutions\r\n              that evolve with the organization.\r\n            </p>\r\n\r\n            {/* Call-to-action */}\r\n            <Button\r\n              variant=\"primary\"\r\n              href=\"#projects\"\r\n              className=\"hero-cta-button mt-3 px-5 py-3 fw-bold fs-5\"\r\n            >\r\n              Explore Projects\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n","export interface Project {\r\n  label: string;\r\n  desc: string;\r\n  img?: string;\r\n  tags: string[];\r\n  category?: string; // New field for high-level grouping\r\n  url?: string;\r\n  githubUrl?: string;\r\n}\r\n\r\nexport const projectsData: Project[] = [\r\n  {\r\n    label: \"IoT Telemetry Pipeline\",\r\n    desc: \"Built PyFlink pipelines to consume IoT telemetry from RabbitMQ, processed real-time with fault tolerance, and committed atomically to Delta Lake on ADLS.\",\r\n    tags: [\"PyFlink\", \"RabbitMQ\", \"Delta Lake\", \"Azure\"],\r\n    category: \"Data Engineering\",\r\n  },\r\n  {\r\n    label: \"CAN Bus Data SDK\",\r\n    desc: \"Developed an SDK to transmit CAN bus data from CAT engines to Azure Lakehouse, enabling predictive maintenance for oilfield equipment.\",\r\n    tags: [\"IoT\", \"Azure\", \"Python\", \"Edge Computing\"],\r\n    category: \"IoT & Robotics\",\r\n  },\r\n  {\r\n    label: \"Financial Data Lakehouse\",\r\n    desc: \"Managed Delta Lake tables within ADLS gen2, implemented financial data modeling, and optimized data warehouse integrity.\",\r\n    tags: [\"Azure\", \"Delta Lake\", \"Data Modeling\", \"Finance\"],\r\n    category: \"Data Engineering\",\r\n  },\r\n  {\r\n    label: \"Patent Data Analytics\",\r\n    desc: \"Built analytics pipelines to process startup data from open-source patent APIs and delivered insights for academic research.\",\r\n    tags: [\"Python\", \"APIs\", \"Data Analytics\"],\r\n    category: \"Data Engineering\",\r\n  },\r\n  {\r\n    label: \"Art Comparison Index\",\r\n    desc: \"Created a scalable TensorFlow-based image similarity index for artworks, supporting research and classification of art data.\",\r\n    tags: [\"TensorFlow\", \"Image Processing\", \"MongoDB\"],\r\n    category: \"Machine Learning\",\r\n  },\r\n  {\r\n    label: \"Artwork Dashboard\",\r\n    desc: \"Full-stack dashboard application to search and visualize artworks stored in MongoDB cloud, leveraging React frontend and backend APIs.\",\r\n    tags: [\"React\", \"MongoDB\", \"Full Stack\"],\r\n    category: \"Full Stack\",\r\n  },\r\n  {\r\n    label: \"Startup Website Scraper\",\r\n    desc: \"Developed a Python Wayback Machine scraper to analyze startup websites before and after acquisition for digital marketing research.\",\r\n    tags: [\"Python\", \"Selenium\", \"Web Scraping\"],\r\n    category: \"Data Engineering\",\r\n  },\r\n  {\r\n    label: \"3D IoT Platform\",\r\n    desc: \"Developed a 3D IoT platform for hydraulic fracturing trucks and pumps using React Three.js, WebSockets, and Azure Blob Storage.\",\r\n    tags: [\"React\", \"Three.js\", \"WebGL\", \"Azure\"],\r\n    category: \"IoT & Robotics\",\r\n  },\r\n  {\r\n    label: \"Reusable Component Library\",\r\n    desc: \"Built 100+ reusable UI components in a React NX monorepo with unit tests, improving productivity across teams.\",\r\n    tags: [\"React\", \"NX\", \"UI Components\", \"TypeScript\"],\r\n    category: \"Frontend\",\r\n  },\r\n  {\r\n    label: \"Full-stack Roadmap Feature\",\r\n    desc: \"Implemented a roadmap feature with React frontend and Java Spring Boot APIs, collaborating with teams on Git strategy to reduce deployment time.\",\r\n    tags: [\"React\", \"Spring Boot\", \"Java\", \"Full Stack\"],\r\n    category: \"Full Stack\",\r\n  },\r\n  {\r\n    label: \"Project Art\",\r\n    desc: \"A collection of similar art works collected from Saffron.\",\r\n    img: \"/images/others/art.jpg\",\r\n    githubUrl: \"https://github.com/ramHruday/artcomp\",\r\n    url: \"https://dass1921.github.io/artcomp/\",\r\n    tags: [\"React\", \"Js\", \"Mongo DB\", \"TensorFlow\"],\r\n    category: \"Frontend\",\r\n  },\r\n  {\r\n    label: \"Project 360\",\r\n    desc: \"A 360 View of the Propetro Services Frac Station\",\r\n    img: \"/images/others/propetro.jpg\",\r\n    githubUrl: \"https://github.com/ramHruday/project360\",\r\n    url: \"https://propetro360.github.io/Site360/\",\r\n    tags: [\"React\", \"TypeScript\", \"Three.js\", \"WebGL\"],\r\n    category: \"Frontend\",\r\n  },\r\n\r\n  {\r\n    label: \"Yettey\",\r\n    img: \"/images/others/yettey.jpg\",\r\n    desc: \"Built as Hackathon project using Firebase Hosting, authentication and Rich text editor. Yettey lets you create blogs then you publish it and earn.\",\r\n    githubUrl: \"https://github.com/ramHruday/YetteY\",\r\n    url: \"https://yettey-app.web.app/write\",\r\n    tags: [\"React\", \"TypeScript\", \"Firebase\", \"Firestore\", \"Ant-design\"],\r\n    category: \"Full Stack\",\r\n  },\r\n  {\r\n    label: \"Project Drone\",\r\n    url: \"https://texastechuniversity-my.sharepoint.com/:p:/g/personal/rbandaru_ttu_edu/Ec6AYz7hyH5Ftlh7OG6HekUBQ37igkQpuGlHusJYooTwsQ?e=fdhmbA\",\r\n    img: \"/images/others/pdrone.jpg\",\r\n    desc: \"Simulation of drone battery utilization with object detection using ROS, Gazebo, YOLO, OpenCV.\",\r\n    githubUrl: \"https://github.com/ramHruday/project-drone\",\r\n    tags: [\"ROS\", \"Gazebo\", \"YOLO\", \"OpenCV\", \"C++\"],\r\n    category: \"IoT & Robotics\",\r\n  },\r\n  {\r\n    label: \"Truffle Starter\",\r\n\r\n    desc: \"This is a truffle project for validating Mutation generation tool called MuSC, Contains 20 solidity files targetting all the edge cases of solidty vulnerabilities\",\r\n    tags: [\"Solidity\", \"Blockchain\"],\r\n    githubUrl: \"https://github.com/ramHruday/truffle-starter\",\r\n    category: \"Blockchain\",\r\n  },\r\n\r\n  {\r\n    label: \"B-App\",\r\n    desc: \"A Full-stack web application for store inventory portal for a family-owned business\",\r\n    githubUrl: \"https://github.com/ramHruday/bApp\",\r\n    url: \"https://bapp-surya.herokuapp.com/\",\r\n    tags: [\"React\", \"JavaScript\", \"Flask\", \"Python\", \"Bootstrap\"],\r\n    category: \"Full Stack\",\r\n  },\r\n  {\r\n    label: \"Pulsa\",\r\n\r\n    desc: \"Google assistant-driven form filling app scheduled daily based on Gitlab/bitbucket commit API.\",\r\n    githubUrl: \"https://github.com/ramHruday/pulsa\",\r\n    tags: [\"Python\", \"Javascript\", \"Google assistant\"],\r\n    category: \"Other\",\r\n  },\r\n  {\r\n    label: \"Leave manager\",\r\n\r\n    desc: \"Simple Leave management application in Angular\",\r\n    githubUrl: \"https://github.com/ramHruday/leave-manager\",\r\n    tags: [\"Angular\", \"ANT design\"],\r\n    category: \"Frontend\",\r\n  },\r\n  {\r\n    label: \"Flipper Bot\",\r\n\r\n    desc: \"A pneumatic powered, miniature aluminum-chassis war robot for a college fest.\",\r\n    tags: [\"War robo\", \"Puematic piston\"],\r\n    category: \"IoT & Robotics\",\r\n  },\r\n  {\r\n    label: \"Spam detection - CNN and SVM\",\r\n\r\n    desc: \"A ML code which detects spam emails with 96.4% accuracy\",\r\n    githubUrl: \"https://github.com/ramHruday/CNN_SVM_spamVsHam\",\r\n    tags: [\"Machine learning\", \"Python\"],\r\n    category: \"Machine Learning\",\r\n  },\r\n  {\r\n    label: \"Code snippets\",\r\n    desc: \"My Code solutions for Google code jam, hackerrank\",\r\n    githubUrl: \"https://github.com/ramHruday/Competitive-Solutions\",\r\n    tags: [\"Javascript\", \"HTML\"],\r\n    category: \"Other\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Card, Button, Accordion } from \"react-bootstrap\";\r\nimport { ExternalLink, GitHub } from \"react-feather\";\r\nimport \"./ProjectSection.scss\";\r\nimport { projectsData } from \"../data/projectsData\";\r\nimport { useProjectFiltering } from \"../hooks/useProjectFiltering\";\r\n\r\ninterface ProjectSectionProps {\r\n  id?: string;\r\n  featuredProjectLabels?: string[]; // New optional prop\r\n}\r\n\r\nconst ProjectSection: React.FC<ProjectSectionProps> = ({ id }) => {\r\n  const {\r\n    // filteredProjects,\r\n    // selectedTags,\r\n    // setSelectedTags,\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n    // allTags,\r\n    allCategories,\r\n  } = useProjectFiltering();\r\n\r\n  // const getTagsForCategory = useMemo(() => {\r\n  //   return (category: string) => {\r\n  //     if (category === \"All\") {\r\n  //       return allTags;\r\n  //     }\r\n  //     const projectsInCategory = projectsData.filter(\r\n  //       (project) => project.category === category\r\n  //     );\r\n  //     const tags = new Set<string>();\r\n  //     projectsInCategory.forEach((project) => {\r\n  //       project.tags.forEach((tag) => tags.add(tag));\r\n  //     });\r\n  //     return Array.from(tags).sort();\r\n  //   };\r\n  // }, [allTags]);\r\n\r\n  return (\r\n    <section id={id} className=\"project-section-container py-5\">\r\n      <Container>\r\n        <h2 className=\"text-center mb-5 display-5 fw-bold\">\r\n          My <span className=\"highlight\">Projects</span>\r\n        </h2>\r\n        {/* <FilterButtons\r\n          allCategories={allCategories}\r\n          selectedCategory={selectedCategory}\r\n          setSelectedCategory={setSelectedCategory}\r\n          allTags={allTags}\r\n          selectedTags={selectedTags}\r\n          setSelectedTags={setSelectedTags}\r\n        /> */}\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Accordion alwaysOpen className=\"mb-4\">\r\n              {allCategories.map((category, categoryIndex) => (\r\n                <Accordion.Item eventKey={String(categoryIndex)} key={category}>\r\n                  <Accordion.Header>{category}</Accordion.Header>\r\n                  <Accordion.Body>\r\n                    <Button\r\n                      variant={selectedCategory === category ? \"primary\" : \"light\"}\r\n                      onClick={() => {\r\n                        setSelectedCategory(category);\r\n                        // setSelectedTags([]); // Clear tags when changing category\r\n                      }}\r\n                      className=\"me-2 mb-2\"\r\n                    >\r\n                      All {category}\r\n                    </Button>\r\n                    <Row xs={1} md={2} lg={3} className=\"g-4 mt-3\">\r\n                      {projectsData\r\n                        .filter((project) => project.category === category)\r\n                        .map((project, index) => (\r\n                          <Col key={index}>\r\n                            <Card className=\"project-card neumorphic-embossed h-100 p-2 center-align\">\r\n                              <Card.Body>\r\n                                <Card.Title className=\"fw-bold\">{project.label}</Card.Title>\r\n                                <Card.Text>{project.desc}</Card.Text>\r\n                                <div className=\"mb-3\">\r\n                                  {project.tags.map((tech, techIndex) => (\r\n                                    <Button\r\n                                      key={techIndex}\r\n                                      className=\"tech-badge me-2 neumorphic-flat-pressed rounded-pill\"\r\n                                    >\r\n                                      {tech}\r\n                                    </Button>\r\n                                  ))}\r\n                                </div>\r\n                              </Card.Body>\r\n                              <Card.Footer className=\"d-flex justify-content-between align-items-center project-card-footer\">\r\n                                <div>\r\n                                  {project.githubUrl && (\r\n                                    <Button\r\n                                      variant=\"link\"\r\n                                      href={project.githubUrl}\r\n                                      target=\"_blank\"\r\n                                      rel=\"noopener noreferrer\"\r\n                                      className=\"project-link-button neumorphic-embossed-icon\"\r\n                                    >\r\n                                      <GitHub size={20} />\r\n                                    </Button>\r\n                                  )}\r\n                                  {project.url && (\r\n                                    <Button\r\n                                      variant=\"link\"\r\n                                      href={project.url}\r\n                                      target=\"_blank\"\r\n                                      rel=\"noopener noreferrer\"\r\n                                      className=\"project-link-button ms-2 neumorphic-embossed-icon\"\r\n                                    >\r\n                                      <ExternalLink size={20} />\r\n                                    </Button>\r\n                                  )}\r\n                                </div>\r\n                              </Card.Footer>\r\n                            </Card>\r\n                          </Col>\r\n                        ))}\r\n                    </Row>\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              ))}\r\n            </Accordion>\r\n          </Col>\r\n        </Row>\r\n        {/* Original project display removed */}\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProjectSection;\r\n","import { useState, useMemo } from \"react\";\r\nimport { Project, projectsData } from \"../data/projectsData\";\r\n\r\ninterface UseProjectFiltering {\r\n  filteredProjects: Project[];\r\n  selectedTags: string[];\r\n  setSelectedTags: React.Dispatch<React.SetStateAction<string[]>>;\r\n  selectedCategory: string | null;\r\n  setSelectedCategory: React.Dispatch<React.SetStateAction<string | null>>;\r\n  allTags: string[];\r\n  allCategories: string[];\r\n}\r\n\r\nexport const useProjectFiltering = (featuredProjectLabels?: string[]): UseProjectFiltering => {\r\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\r\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n\r\n  const baseProjects = useMemo(() => {\r\n    if (featuredProjectLabels) {\r\n      return projectsData.filter((project) =>\r\n        featuredProjectLabels.includes(project.label)\r\n      );\r\n    }\r\n    return projectsData;\r\n  }, [featuredProjectLabels]);\r\n\r\n  const allTags = useMemo(\r\n    () => Array.from(new Set(baseProjects.flatMap((project) => project.tags))),\r\n    [baseProjects]\r\n  );\r\n\r\n  const allCategories = useMemo(\r\n    () =>\r\n      Array.from(new Set(baseProjects.map((project) => project.category))).filter(\r\n        Boolean\r\n      ) as string[],\r\n    [baseProjects]\r\n  );\r\n\r\n  const filteredProjects = useMemo(() => {\r\n    return baseProjects.filter((project) => {\r\n      const matchesCategory = selectedCategory\r\n        ? project.category === selectedCategory\r\n        : true;\r\n      const matchesTags =\r\n        selectedTags.length === 0\r\n          ? true\r\n          : selectedTags.some((tag) => project.tags.includes(tag));\r\n      return matchesCategory && matchesTags;\r\n    });\r\n  }, [selectedTags, selectedCategory, baseProjects]);\r\n\r\n  return {\r\n    filteredProjects,\r\n    selectedTags,\r\n    setSelectedTags,\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n    allTags,\r\n    allCategories,\r\n  };\r\n};\r\n","export interface Skill {\r\n  name: string;\r\n  iconUrl: string;\r\n}\r\n\r\nexport interface SkillCategory {\r\n  category: string;\r\n  skills: Skill[];\r\n}\r\n\r\nexport const skillsData: SkillCategory[] = [\r\n  {\r\n    category: \"Languages\",\r\n    skills: [\r\n      { name: \"JavaScript\", iconUrl: \"/images/skills/javascript.webp\" },\r\n      { name: \"TypeScript\", iconUrl: \"/images/skills/typescript.webp\" },\r\n      { name: \"Python\", iconUrl: \"/images/skills/python.webp\" },\r\n      { name: \"C++\", iconUrl: \"/images/skills/cpp.webp\" },\r\n    ],\r\n  },\r\n  {\r\n    category: \"Frameworks & Libraries\",\r\n    skills: [\r\n      { name: \"React\", iconUrl: \"/images/frameworks/react.webp\" },\r\n      { name: \"Angular\", iconUrl: \"/images/frameworks/angular.webp\" },\r\n      { name: \"Spark\", iconUrl: \"/images/others/spark.png\" },\r\n      { name: \"Table Format\", iconUrl: \"/images/others/openfil.webp\" },\r\n    ],\r\n  },\r\n  {\r\n    category: \"Tools & Platforms\",\r\n    skills: [\r\n      { name: \"Docker\", iconUrl: \"/images/others/docker.svg\" },\r\n      { name: \"Azure\", iconUrl: \"/images/others/azure.svg\" },\r\n      { name: \"Firebase\", iconUrl: \"/images/others/firebase.webp\" },\r\n      { name: \"MongoDB\", iconUrl: \"/images/others/mongo.webp\" },\r\n      { name: \"PostgreSQL\", iconUrl: \"/images/others/postgre.webp\" },\r\n    ],\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport \"./SkillsSection.scss\";\r\nimport { skillsData } from \"../data/skillsData\"; // Corrected import path\r\n\r\ninterface SkillsSectionProps {\r\n  id?: string;\r\n}\r\n\r\nconst SkillsSection: React.FC<SkillsSectionProps> = ({ id }) => {\r\n  return (\r\n    <section id={id} className=\"skills-section-container py-5\">\r\n      <Container>\r\n        <h2 className=\"text-center mb-5 display-5 fw-bold\">\r\n          My <span className=\"highlight\">Skills</span>\r\n        </h2>\r\n        <Row>\r\n          {skillsData.map((category, index) => (\r\n            <Col key={index} xs={12} className=\"mb-5\">\r\n              <h3 className=\"text-center mb-4 skill-category-title\">\r\n                {category.category}\r\n              </h3>\r\n              <Row className=\"g-4 justify-content-center\">\r\n                {category.skills.map((skill, skillIndex) => (\r\n                  <Col key={skillIndex} xs={4} sm={4} md={2} lg={2}>\r\n                    <Card className=\"skill-card neumorphic-embossed h-100 d-flex flex-column align-items-center justify-content-center text-center p-3\">\r\n                      <Card.Img\r\n                        variant=\"top\"\r\n                        src={`${process.env.PUBLIC_URL}/assets${skill.iconUrl}`}\r\n                        alt={skill.name}\r\n                        className=\"skill-icon mb-2\"\r\n                      />\r\n                      <Card.Text className=\"fw-bold mb-0\">\r\n                        {skill.name}\r\n                      </Card.Text>\r\n                    </Card>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SkillsSection;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nexport type Theme = 'light-mode' | 'dark-mode';\r\n\r\nexport interface ThemeContextState {\r\n  toggleTheme: () => void;\r\n  theme: Theme;\r\n}\r\n\r\nconst ThemeContext = React.createContext<ThemeContextState>(null!);\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n\r\nexport const ThemeContextProvider: React.FC = ({ children }) => {\r\n  const [isLight, setIsLight] = useState(() => {\r\n    // Initialize theme based on system preference or a stored value\r\n    const storedTheme = localStorage.getItem('theme');\r\n    if (storedTheme) {\r\n      return storedTheme === 'light-mode';\r\n    }\r\n    return window.matchMedia('(prefers-color-scheme: light)').matches;\r\n  });\r\n\r\n  useEffect(() => {\r\n    const currentTheme = isLight ? 'light-mode' : 'dark-mode';\r\n    document.body.className = currentTheme; // Set the class on body\r\n    localStorage.setItem('theme', currentTheme); // Store preference\r\n  }, [isLight]);\r\n\r\n  const toggleTheme = () => {\r\n    setIsLight(prevIsLight => !prevIsLight);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{ theme: isLight ? 'light-mode' : 'dark-mode', toggleTheme }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { GitHub, Linkedin, Mail } from \"react-feather\";\r\nimport { useTheme } from \"../contexts/theme-context\";\r\nimport \"./ContactSection.scss\";\r\n\r\ninterface ContactSectionProps {\r\n  id?: string;\r\n}\r\n\r\nconst ContactSection: React.FC<ContactSectionProps> = ({ id }) => {\r\n  const { theme } = useTheme();\r\n\r\n  const cursorLogo =\r\n    theme === \"light-mode\"\r\n      ? `${process.env.PUBLIC_URL}/assets/images/logos/AVATAR_CIRCLE_LIGHT.png`\r\n      : `${process.env.PUBLIC_URL}/assets/images/logos/AVATAR_CIRCLE_DARK.png`;\r\n\r\n  return (\r\n    <section id={id} className=\"contact-section-container py-5\">\r\n      <Container>\r\n        <h2 className=\"text-center mb-5 display-5 fw-bold\">\r\n          Get in <span className=\"highlight\">Touch</span>\r\n        </h2>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md={8} lg={6}>\r\n            <p className=\"text-center mb-4 lead\">\r\n              I'm always open to new opportunities and collaborations. Feel free\r\n              to reach out!\r\n            </p>\r\n            <div className=\"d-flex justify-content-center mb-5 social-links\">\r\n              <Button\r\n                variant=\"link\"\r\n                href=\"https://github.com/ramHruday\" // Replace with your GitHub URL\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"neumorphic-embossed-icon mx-3 p-3\"\r\n              >\r\n                <GitHub size={30} />\r\n              </Button>\r\n              <Button\r\n                variant=\"link\"\r\n                href=\"https://www.linkedin.com/in/rama-hrudayb/\" // Replace with your LinkedIn URL\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"neumorphic-embossed-icon mx-3 p-3\"\r\n              >\r\n                <Linkedin size={30} />\r\n              </Button>\r\n              <Button\r\n                variant=\"link\"\r\n                href=\"mailto:ramahrudaybandaru@gmail.com\" // Replace with your email address\r\n                className=\"neumorphic-embossed-icon mx-3 p-3\"\r\n              >\r\n                <Mail size={30} />\r\n              </Button>\r\n            </div>\r\n            <p\r\n              className=\"text-center text-muted mb-4\"\r\n              style={{ fontSize: \"0.85rem\" }}\r\n            >\r\n              <a\r\n                href=\"https://cursor.sh\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n              >\r\n                built with cursor\r\n                <img\r\n                  src={cursorLogo}\r\n                  alt=\"Cursor Logo\"\r\n                  style={{\r\n                    height: \"2em\",\r\n                    marginRight: \"0.3em\",\r\n                    verticalAlign: \"middle\",\r\n                  }}\r\n                />\r\n              </a>\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContactSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Home, User, Folder, Award, Mail, GitHub, Linkedin } from 'react-feather';\r\nimport { NavHashLink } from 'react-router-hash-link';\r\nimport './SideNavigation.scss';\r\n\r\nconst navLinks = [\r\n  { to: '#home', icon: Home, label: 'Home' },\r\n  { to: '#about', icon: User, label: 'About' },\r\n  { to: '#projects', icon: Folder, label: 'Projects' },\r\n  { to: '#skills', icon: Award, label: 'Skills' },\r\n  { to: '#contact', icon: Mail, label: 'Contact' },\r\n];\r\n\r\nconst socialLinks = [\r\n  { to: 'https://github.com/ramHruday', icon: GitHub, label: 'GitHub' }, // Replace with your GitHub\r\n  { to: 'https://www.linkedin.com/in/rama-hrudayb/', icon: Linkedin, label: 'LinkedIn' }, // Replace with your LinkedIn\r\n];\r\n\r\nconst SideNavigation: React.FC = () => {\r\n  const [activeHash, setActiveHash] = useState('#home');\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const sections = navLinks.map(link => document.getElementById(link.to.substring(1)));\r\n      const scrollPosition = window.scrollY + window.innerHeight / 2;\r\n\r\n      for (let i = sections.length - 1; i >= 0; i--) {\r\n        const section = sections[i];\r\n        if (section && section.offsetTop <= scrollPosition) {\r\n          setActiveHash(navLinks[i].to);\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    handleScroll(); // Set active section on initial load\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"side-navigation-container position-fixed d-none d-md-flex flex-column justify-content-between h-100 p-3\">\r\n      <div className=\"nav-links d-flex flex-column align-items-center\">\r\n        {navLinks.map((link) => (\r\n          <NavHashLink \r\n            key={link.to}\r\n            smooth \r\n            to={link.to}\r\n            className={`nav-item neumorphic-embossed-icon p-3 mb-3 ${activeHash === link.to ? 'active' : ''}`}\r\n            aria-label={link.label}\r\n          >\r\n            <link.icon size={20} />\r\n          </NavHashLink>\r\n        ))}\r\n      </div>\r\n      <div className=\"social-links d-flex flex-column align-items-center\">\r\n        {socialLinks.map((link) => (\r\n          <a \r\n            key={link.to}\r\n            href={link.to} \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\" \r\n            className=\"neumorphic-embossed-icon p-3 mb-3\"\r\n            aria-label={link.label}\r\n          >\r\n            <link.icon size={20} />\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SideNavigation;\r\n","import React from 'react';\r\nimport { Sun, Moon } from 'react-feather';\r\nimport { useTheme } from '../contexts/theme-context'; // Import useTheme hook\r\nimport './ThemeToggleButton.scss';\r\n\r\nconst ThemeToggleButton: React.FC = () => {\r\n  const { theme, toggleTheme } = useTheme();\r\n\r\n  return (\r\n    <button \r\n      onClick={toggleTheme} \r\n      className=\"theme-toggle-button neumorphic-embossed-icon p-3 mb-3\"\r\n      aria-label=\"Toggle theme\"\r\n    >\r\n      {theme === 'light-mode' ? <Moon size={20} /> : <Sun size={20} />}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggleButton;\r\n","import React from 'react';\r\nimport HeroSection from './HeroSection'; // Import HeroSection\r\nimport ProjectSection from './ProjectSection'; // Import ProjectSection\r\nimport SkillsSection from './SkillsSection'; // Import SkillsSection\r\nimport ContactSection from './ContactSection'; // Import ContactSection\r\nimport SideNavigation from './SideNavigation'; // Import SideNavigation\r\nimport ThemeToggleButton from './ThemeToggleButton'; // Import ThemeToggleButton\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst LandingPage: React.FC = () => {\r\n\r\n  return (\r\n    <div className=\"landing-page-container\">\r\n      <SideNavigation /> {/* Render SideNavigation */}\r\n      <ThemeToggleButton /> {/* Render ThemeToggleButton at the top level */}\r\n      <Container fluid className=\"main-content ms-md-5\">\r\n        <Row>\r\n          <Col>\r\n            <HeroSection id=\"home\" /> {/* Render HeroSection */}\r\n            {/* <ProjectSection id=\"featured-projects\" featuredProjectLabels={featuredProjectLabels} /> Featured Projects */}\r\n            <ProjectSection id=\"projects\" /> {/* All Projects */}\r\n            <SkillsSection id=\"skills\" /> {/* Render SkillsSection */}\r\n            <ContactSection id=\"contact\" /> {/* Render ContactSection */}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport LandingPage from \"./components/LandingPage\"; // Import the new LandingPage component\r\nimport { ThemeContextProvider } from \"./contexts\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <ThemeContextProvider>\r\n      <LandingPage /> {/* Render the new LandingPage component */}\r\n    </ThemeContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.scss';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// import 'typeface-roboto';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/rh-dev\">\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}