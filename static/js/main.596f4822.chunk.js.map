{"version":3,"sources":["components/TypingEffectTitle.tsx","components/HeroSection.tsx","components/AboutSection.tsx","data/projectsData.ts","components/FilterButtons.tsx","components/ProjectSection.tsx","hooks/useProjectFiltering.ts","data/skillsData.ts","components/SkillsSection.tsx","components/ContactSection.tsx","components/SideNavigation.tsx","contexts/theme-context.tsx","components/ThemeToggleButton.tsx","components/LandingPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TypingEffectTitle","_ref","messages","typingSpeed","deletingSpeed","delayBetweenMessages","currentMessageIndex","setCurrentMessageIndex","useState","currentText","setCurrentText","isDeleting","setIsDeleting","typingPause","setTypingPause","useEffect","timer","setTimeout","handleTyping","fullText","substring","length","prev","clearTimeout","React","createElement","className","HeroSection","id","Container","Button","variant","href","AboutSection","Row","Col","md","projectsData","label","desc","tags","category","img","githubUrl","url","FilterButton","isActive","onClick","showCheck","Check","size","FilterButtons","_ref2","allCategories","selectedCategory","setSelectedCategory","allTags","selectedTags","setSelectedTags","Fragment","map","key","ProjectSection","filteredProjects","useProjectFiltering","useMemo","Array","from","Set","flatMap","project","filter","Boolean","matchesCategory","matchesTags","some","tag","includes","xs","lg","index","Card","Body","Title","Text","tech","techIndex","Footer","target","rel","GitHub","ExternalLink","skillsData","skills","name","iconUrl","SkillsSection","sm","skill","skillIndex","Img","src","concat","process","alt","ContactSection","Linkedin","Mail","navLinks","to","icon","Home","User","Folder","Award","socialLinks","SideNavigation","activeHash","setActiveHash","handleScroll","sections","link","document","getElementById","scrollPosition","window","scrollY","innerHeight","i","section","offsetTop","addEventListener","removeEventListener","NavHashLink","smooth","aria-label","ThemeContext","createContext","ThemeContextProvider","children","isLight","setIsLight","storedTheme","localStorage","getItem","matchMedia","matches","currentTheme","body","setItem","Provider","value","theme","toggleTheme","prevIsLight","ThemeToggleButton","useContext","Moon","Sun","LandingPage","App","location","hostname","match","ReactDOM","render","BrowserRouter","basename","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.596f4822.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TypingEffectTitle.scss';\r\n\r\ninterface TypingEffectTitleProps {\r\n  messages: string[];\r\n  typingSpeed?: number;\r\n  deletingSpeed?: number;\r\n  delayBetweenMessages?: number;\r\n}\r\n\r\nconst TypingEffectTitle: React.FC<TypingEffectTitleProps> = ({\r\n  messages,\r\n  typingSpeed = 100,\r\n  deletingSpeed = 50,\r\n  delayBetweenMessages = 1500,\r\n}) => {\r\n  const [currentMessageIndex, setCurrentMessageIndex] = useState(0);\r\n  const [currentText, setCurrentText] = useState('');\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [typingPause, setTypingPause] = useState(delayBetweenMessages);\r\n\r\n  useEffect(() => {\r\n    let timer: NodeJS.Timeout;\r\n\r\n    const handleTyping = () => {\r\n      const fullText = messages[currentMessageIndex];\r\n\r\n      if (isDeleting) {\r\n        setCurrentText(fullText.substring(0, currentText.length - 1));\r\n      } else {\r\n        setCurrentText(fullText.substring(0, currentText.length + 1));\r\n      }\r\n\r\n      if (!isDeleting && currentText === fullText) {\r\n        // Pause at end of typing\r\n        setTypingPause(delayBetweenMessages);\r\n        setIsDeleting(true);\r\n      } else if (isDeleting && currentText === '') {\r\n        // Pause at end of deleting, move to next message\r\n        setIsDeleting(false);\r\n        setCurrentMessageIndex((prev) => (prev + 1) % messages.length);\r\n        setTypingPause(100); // Short pause before typing next message\r\n      }\r\n    };\r\n\r\n    timer = setTimeout(\r\n      handleTyping,\r\n      isDeleting ? deletingSpeed : typingSpeed + typingPause\r\n    );\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [currentText, isDeleting, currentMessageIndex, typingPause, messages, typingSpeed, deletingSpeed, delayBetweenMessages]);\r\n\r\n  return (\r\n    <span className=\"typing-effect-title\">\r\n      {currentText}\r\n      <span className=\"typing-cursor\"></span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TypingEffectTitle;\r\n","import React from 'react';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport TypingEffectTitle from './TypingEffectTitle'; // Import TypingEffectTitle\r\nimport './HeroSection.scss';\r\n\r\ninterface HeroSectionProps {\r\n  id?: string;\r\n}\r\n\r\nconst HeroSection: React.FC<HeroSectionProps> = ({ id }) => {\r\n  const roles = [\r\n    \"Data Engineer turning raw data into insights.\",\r\n    \"Frontend Developer creating seamless UIs.\",\r\n    \"Robotics enthusiast automating the future.\",\r\n  ];\r\n\r\n  return (\r\n    <section id={id} className=\"hero-section-container d-flex align-items-center\">\r\n      <Container className=\"text-center\">\r\n        <h1 className=\"display-3 fw-bold mb-4\">\r\n          Hi, I'm <span className=\"highlight\">Rama Hruday</span>,\r\n        </h1>\r\n        <h2 className=\"lead mb-4\">\r\n          <TypingEffectTitle \r\n            messages={roles} \r\n            typingSpeed={200} // Faster typing speed\r\n            deletingSpeed={50} // Faster deleting speed\r\n            delayBetweenMessages={0} // Shorter delay between messages\r\n          />\r\n        </h2>\r\n        <Button variant=\"primary\" href=\"#projects\" className=\"hero-cta-button mt-3\">\r\n          View My Work\r\n        </Button>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./AboutSection.scss\";\r\ninterface AboutSectionProps {\r\n  id?: string;\r\n}\r\n\r\nconst AboutSection: React.FC<AboutSectionProps> = ({ id }) => {\r\n  return (\r\n    <section id={id} className=\"about-section-container py-5\">\r\n      <Container>\r\n        <h2 className=\"text-center mb-5 display-5 fw-bold\">\r\n          About <span className=\"highlight\">Me</span>\r\n        </h2>\r\n        <Row className=\"align-items-center justify-content-center\">\r\n          {/* <Col md={4} className=\"text-center mb-4 mb-md-0\">\r\n            <Image src={profilePic} alt=\"Profile\" fluid roundedCircle className=\"profile-image-about neumorphic-embossed\" />\r\n          </Col> */}\r\n          <Col md={7} className=\"about-content\">\r\n            <p className=\"lead\">\r\n              Hello! I'm Hruday, a Data Engineer passionate about building\r\n              scalable, cloud-native data systems.\r\n            </p>\r\n            <p>\r\n              At ProPetro Services, I design and optimize pipelines that power\r\n              real-time IoT analytics, financial reporting, and predictive\r\n              maintenance. My experience spans PySpark, Flink, Delta Lake, and\r\n              modern lakehouse architectures, with a focus on delivering data\r\n              solutions that are reliable, performant, and business-driven.\r\n            </p>\r\n            <p>\r\n              I thrive on solving complex data challenges — from streaming\r\n              telemetry at scale to modeling financial systems — and enjoy\r\n              transforming raw data into actionable insights. Always exploring\r\n              new technologies, I aim to create data platforms that not only\r\n              meet today’s needs but also scale for tomorrow.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AboutSection;\r\n","export interface Project {\r\n  label: string;\r\n  desc: string;\r\n  img?: string;\r\n  tags: string[];\r\n  category?: string; // New field for high-level grouping\r\n  url?: string;\r\n  githubUrl?: string;\r\n}\r\n\r\nexport const projectsData: Project[] = [\r\n  {\r\n    label: \"IoT Telemetry Pipeline\",\r\n    desc: \"Built PyFlink pipelines to consume IoT telemetry from RabbitMQ, processed real-time with fault tolerance, and committed atomically to Delta Lake on ADLS.\",\r\n    tags: [\"PyFlink\", \"RabbitMQ\", \"Delta Lake\", \"Azure\"],\r\n    category: \"Data Engineering\",\r\n  },\r\n  {\r\n    label: \"CAN Bus Data SDK\",\r\n    desc: \"Developed an SDK to transmit CAN bus data from CAT engines to Azure Lakehouse, enabling predictive maintenance for oilfield equipment.\",\r\n    tags: [\"IoT\", \"Azure\", \"Python\", \"Edge Computing\"],\r\n    category: \"IoT & Robotics\",\r\n  },\r\n  {\r\n    label: \"Financial Data Lakehouse\",\r\n    desc: \"Managed Delta Lake tables within ADLS gen2, implemented financial data modeling, and optimized data warehouse integrity.\",\r\n    tags: [\"Azure\", \"Delta Lake\", \"Data Modeling\", \"Finance\"],\r\n    category: \"Data Engineering\",\r\n  },\r\n  {\r\n    label: \"Patent Data Analytics\",\r\n    desc: \"Built analytics pipelines to process startup data from open-source patent APIs and delivered insights for academic research.\",\r\n    tags: [\"Python\", \"APIs\", \"Data Analytics\"],\r\n    category: \"Data Engineering\",\r\n  },\r\n  {\r\n    label: \"Art Comparison Index\",\r\n    desc: \"Created a scalable TensorFlow-based image similarity index for artworks, supporting research and classification of art data.\",\r\n    tags: [\"TensorFlow\", \"Image Processing\", \"MongoDB\"],\r\n    category: \"Machine Learning\",\r\n  },\r\n  {\r\n    label: \"Artwork Dashboard\",\r\n    desc: \"Full-stack dashboard application to search and visualize artworks stored in MongoDB cloud, leveraging React frontend and backend APIs.\",\r\n    tags: [\"React\", \"MongoDB\", \"Full Stack\"],\r\n    category: \"Full Stack\",\r\n  },\r\n  {\r\n    label: \"Startup Website Scraper\",\r\n    desc: \"Developed a Python Wayback Machine scraper to analyze startup websites before and after acquisition for digital marketing research.\",\r\n    tags: [\"Python\", \"Selenium\", \"Web Scraping\"],\r\n    category: \"Data Engineering\",\r\n  },\r\n  {\r\n    label: \"3D IoT Platform\",\r\n    desc: \"Developed a 3D IoT platform for hydraulic fracturing trucks and pumps using React Three.js, WebSockets, and Azure Blob Storage.\",\r\n    tags: [\"React\", \"Three.js\", \"WebGL\", \"Azure\"],\r\n    category: \"IoT & Robotics\",\r\n  },\r\n  {\r\n    label: \"Reusable Component Library\",\r\n    desc: \"Built 100+ reusable UI components in a React NX monorepo with unit tests, improving productivity across teams.\",\r\n    tags: [\"React\", \"NX\", \"UI Components\", \"TypeScript\"],\r\n    category: \"Frontend\",\r\n  },\r\n  {\r\n    label: \"Full-stack Roadmap Feature\",\r\n    desc: \"Implemented a roadmap feature with React frontend and Java Spring Boot APIs, collaborating with teams on Git strategy to reduce deployment time.\",\r\n    tags: [\"React\", \"Spring Boot\", \"Java\", \"Full Stack\"],\r\n    category: \"Full Stack\",\r\n  },\r\n  {\r\n    label: \"Project Art\",\r\n    desc: \"A collection of similar art works collected from Saffron.\",\r\n    img: \"/images/others/art.jpg\",\r\n    githubUrl: \"https://github.com/ramHruday/artcomp\",\r\n    url: \"https://dass1921.github.io/artcomp/\",\r\n    tags: [\"React\", \"Js\", \"Mongo DB\", \"TensorFlow\"],\r\n    category: \"Frontend\",\r\n  },\r\n  {\r\n    label: \"Project 360\",\r\n    desc: \"A 360 View of the Propetro Services Frac Station\",\r\n    img: \"/images/others/propetro.jpg\",\r\n    githubUrl: \"https://github.com/ramHruday/project360\",\r\n    url: \"https://propetro360.github.io/Site360/\",\r\n    tags: [\"React\", \"TypeScript\", \"Three.js\", \"WebGL\"],\r\n    category: \"Frontend\",\r\n  },\r\n\r\n  {\r\n    label: \"Yettey\",\r\n    img: \"/images/others/yettey.jpg\",\r\n    desc: \"Built as Hackathon project using Firebase Hosting, authentication and Rich text editor. Yettey lets you create blogs then you publish it and earn.\",\r\n    githubUrl: \"https://github.com/ramHruday/YetteY\",\r\n    url: \"https://yettey-app.web.app/write\",\r\n    tags: [\"React\", \"TypeScript\", \"Firebase\", \"Firestore\", \"Ant-design\"],\r\n    category: \"Full Stack\",\r\n  },\r\n  {\r\n    label: \"Project Drone\",\r\n    url: \"https://texastechuniversity-my.sharepoint.com/:p:/g/personal/rbandaru_ttu_edu/Ec6AYz7hyH5Ftlh7OG6HekUBQ37igkQpuGlHusJYooTwsQ?e=fdhmbA\",\r\n    img: \"/images/others/pdrone.jpg\",\r\n    desc: \"Simulation of drone battery utilization with object detection using ROS, Gazebo, YOLO, OpenCV.\",\r\n    githubUrl: \"https://github.com/ramHruday/project-drone\",\r\n    tags: [\"ROS\", \"Gazebo\", \"YOLO\", \"OpenCV\", \"C++\"],\r\n    category: \"IoT & Robotics\",\r\n  },\r\n  {\r\n    label: \"Truffle Starter\",\r\n\r\n    desc: \"This is a truffle project for validating Mutation generation tool called MuSC, Contains 20 solidity files targetting all the edge cases of solidty vulnerabilities\",\r\n    tags: [\"Solidity\", \"Blockchain\"],\r\n    githubUrl: \"https://github.com/ramHruday/truffle-starter\",\r\n    category: \"Blockchain\",\r\n  },\r\n\r\n  {\r\n    label: \"B-App\",\r\n    desc: \"A Full-stack web application for store inventory portal for a family-owned business\",\r\n    githubUrl: \"https://github.com/ramHruday/bApp\",\r\n    url: \"https://bapp-surya.herokuapp.com/\",\r\n    tags: [\"React\", \"JavaScript\", \"Flask\", \"Python\", \"Bootstrap\"],\r\n    category: \"Full Stack\",\r\n  },\r\n  {\r\n    label: \"Pulsa\",\r\n\r\n    desc: \"Google assistant-driven form filling app scheduled daily based on Gitlab/bitbucket commit API.\",\r\n    githubUrl: \"https://github.com/ramHruday/pulsa\",\r\n    tags: [\"Python\", \"Javascript\", \"Google assistant\"],\r\n    category: \"Other\",\r\n  },\r\n  {\r\n    label: \"Leave manager\",\r\n\r\n    desc: \"Simple Leave management application in Angular\",\r\n    githubUrl: \"https://github.com/ramHruday/leave-manager\",\r\n    tags: [\"Angular\", \"ANT design\"],\r\n    category: \"Frontend\",\r\n  },\r\n  {\r\n    label: \"Flipper Bot\",\r\n\r\n    desc: \"A pneumatic powered, miniature aluminum-chassis war robot for a college fest.\",\r\n    tags: [\"War robo\", \"Puematic piston\"],\r\n    category: \"IoT & Robotics\",\r\n  },\r\n  {\r\n    label: \"Spam detection - CNN and SVM\",\r\n\r\n    desc: \"A ML code which detects spam emails with 96.4% accuracy\",\r\n    githubUrl: \"https://github.com/ramHruday/CNN_SVM_spamVsHam\",\r\n    tags: [\"Machine learning\", \"Python\"],\r\n    category: \"Machine Learning\",\r\n  },\r\n  {\r\n    label: \"Code snippets\",\r\n    desc: \"My Code solutions for Google code jam, hackerrank\",\r\n    githubUrl: \"https://github.com/ramHruday/Competitive-Solutions\",\r\n    tags: [\"Javascript\", \"HTML\"],\r\n    category: \"Other\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Check } from \"react-feather\";\r\n\r\ninterface FilterButtonProps {\r\n  label: string;\r\n  isActive: boolean;\r\n  onClick: () => void;\r\n  showCheck?: boolean;\r\n}\r\n\r\nconst FilterButton: React.FC<FilterButtonProps> = ({\r\n  label,\r\n  isActive,\r\n  onClick,\r\n  showCheck = true,\r\n}) => (\r\n  <Button\r\n    variant={isActive ? \"primary\" : \"outline-primary\"}\r\n    className=\"mx-1 my-1 neumorphic-flat-pressed\"\r\n    onClick={onClick}\r\n  >\r\n    {label} {isActive && showCheck && <Check size={14} className=\"ms-1\" />}\r\n  </Button>\r\n);\r\n\r\ninterface FilterButtonsProps {\r\n  allCategories: string[];\r\n  selectedCategory: string | null;\r\n  setSelectedCategory: (category: string | null) => void;\r\n  allTags: string[];\r\n  selectedTags: string[];\r\n  setSelectedTags: (tags: string[]) => void;\r\n}\r\n\r\nexport const FilterButtons: React.FC<FilterButtonsProps> = ({\r\n  allCategories,\r\n  selectedCategory,\r\n  setSelectedCategory,\r\n  allTags,\r\n  selectedTags,\r\n  setSelectedTags,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-wrap justify-content-center mb-3\">\r\n        <FilterButton\r\n          label=\"All Categories\"\r\n          isActive={selectedCategory === null}\r\n          onClick={() => setSelectedCategory(null)}\r\n          showCheck={false} // Don't show check for \"All Categories\"\r\n        />\r\n        {allCategories.map((category) => (\r\n          <FilterButton\r\n            key={category}\r\n            label={category}\r\n            isActive={selectedCategory === category}\r\n            onClick={() => setSelectedCategory(category)}\r\n          />\r\n        ))}\r\n      </div>\r\n      {/* <div className=\"d-flex flex-wrap justify-content-center mb-4\">\r\n        <FilterButton\r\n          label=\"Clear Filters\"\r\n          isActive={selectedTags.length === 0}\r\n          onClick={() => setSelectedTags([])}\r\n          showCheck={false} // Don't show check for \"Clear Filters\"\r\n        />\r\n        {allTags.map((tag) => (\r\n          <FilterButton\r\n            key={tag}\r\n            label={tag}\r\n            isActive={selectedTags.includes(tag)}\r\n            onClick={() =>\r\n              setSelectedTags((prevTags) =>\r\n                prevTags.includes(tag)\r\n                  ? prevTags.filter((t) => t !== tag)\r\n                  : [...prevTags, tag]\r\n              )\r\n            }\r\n          />\r\n        ))}\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useMemo } from \"react\";\r\nimport { Container, Row, Col, Card, Badge, Button } from \"react-bootstrap\";\r\nimport { ExternalLink, GitHub, Check } from \"react-feather\";\r\nimport \"./ProjectSection.scss\";\r\nimport { projectsData } from \"../data/projectsData\";\r\nimport { useProjectFiltering } from \"../hooks/useProjectFiltering\";\r\nimport { FilterButtons } from \"../components/FilterButtons\";\r\n\r\ninterface ProjectSectionProps {\r\n  id?: string;\r\n}\r\n\r\nconst ProjectSection: React.FC<ProjectSectionProps> = ({ id }) => {\r\n  const {\r\n    filteredProjects,\r\n    selectedTags,\r\n    setSelectedTags,\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n    allTags,\r\n    allCategories,\r\n  } = useProjectFiltering();\r\n\r\n  return (\r\n    <section id={id} className=\"project-section-container py-5\">\r\n      <Container>\r\n        <h2 className=\"text-center mb-5 display-5 fw-bold\">\r\n          My <span className=\"highlight\">Projects</span>\r\n        </h2>\r\n        <FilterButtons\r\n          allCategories={allCategories}\r\n          selectedCategory={selectedCategory}\r\n          setSelectedCategory={setSelectedCategory}\r\n          allTags={allTags}\r\n          selectedTags={selectedTags}\r\n          setSelectedTags={setSelectedTags}\r\n        />\r\n        <Row xs={1} md={2} lg={3} className=\"g-4\">\r\n          {filteredProjects.map((project, index) => (\r\n            <Col key={index}>\r\n              <Card className=\"project-card neumorphic-embossed h-100 p-2 center-align\">\r\n                {/* {project.img ? (\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src={`${process.env.PUBLIC_URL}/assets${project.img}`}\r\n                    alt={project.label}\r\n                    className=\"project-image\"\r\n                  />\r\n                ) : null} */}\r\n                <Card.Body>\r\n                  <Card.Title className=\"fw-bold\">{project.label}</Card.Title>\r\n                  <Card.Text>{project.desc}</Card.Text>\r\n                  <div className=\"mb-3\">\r\n                    {project.tags.map((tech, techIndex) => (\r\n                      <Button\r\n                        key={techIndex}\r\n                        className=\"tech-badge me-2 neumorphic-flat-pressed rounded-pill\"\r\n                        // onClick={() =>\r\n                        //   setSelectedTags((prevTags) =>\r\n                        //     prevTags.includes(tech)\r\n                        //       ? prevTags.filter((t) => t !== tech)\r\n                        //       : [...prevTags, tech]\r\n                        //   )\r\n                        // }\r\n                      >\r\n                        {tech}\r\n                      </Button>\r\n                    ))}\r\n                  </div>\r\n                </Card.Body>\r\n                <Card.Footer className=\"d-flex justify-content-between align-items-center project-card-footer\">\r\n                  <div>\r\n                    {project.githubUrl && (\r\n                      <Button\r\n                        variant=\"link\"\r\n                        href={project.githubUrl}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"project-link-button neumorphic-embossed-icon\"\r\n                      >\r\n                        <GitHub size={20} />\r\n                      </Button>\r\n                    )}\r\n                    {project.url && (\r\n                      <Button\r\n                        variant=\"link\"\r\n                        href={project.url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"project-link-button ms-2 neumorphic-embossed-icon\"\r\n                      >\r\n                        <ExternalLink size={20} />\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </Card.Footer>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProjectSection;\r\n","import { useState, useMemo } from \"react\";\r\nimport { Project, projectsData } from \"../data/projectsData\";\r\n\r\ninterface UseProjectFiltering {\r\n  filteredProjects: Project[];\r\n  selectedTags: string[];\r\n  setSelectedTags: React.Dispatch<React.SetStateAction<string[]>>;\r\n  selectedCategory: string | null;\r\n  setSelectedCategory: React.Dispatch<React.SetStateAction<string | null>>;\r\n  allTags: string[];\r\n  allCategories: string[];\r\n}\r\n\r\nexport const useProjectFiltering = (): UseProjectFiltering => {\r\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\r\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n\r\n  const allTags = useMemo(\r\n    () => Array.from(new Set(projectsData.flatMap((project) => project.tags))),\r\n    []\r\n  );\r\n\r\n  const allCategories = useMemo(\r\n    () =>\r\n      Array.from(new Set(projectsData.map((project) => project.category))).filter(\r\n        Boolean\r\n      ) as string[],\r\n    []\r\n  );\r\n\r\n  const filteredProjects = useMemo(() => {\r\n    return projectsData.filter((project) => {\r\n      const matchesCategory = selectedCategory\r\n        ? project.category === selectedCategory\r\n        : true;\r\n      const matchesTags =\r\n        selectedTags.length === 0\r\n          ? true\r\n          : selectedTags.some((tag) => project.tags.includes(tag));\r\n      return matchesCategory && matchesTags;\r\n    });\r\n  }, [selectedTags, selectedCategory]);\r\n\r\n  return {\r\n    filteredProjects,\r\n    selectedTags,\r\n    setSelectedTags,\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n    allTags,\r\n    allCategories,\r\n  };\r\n};\r\n","export interface Skill {\r\n  name: string;\r\n  iconUrl: string;\r\n}\r\n\r\nexport interface SkillCategory {\r\n  category: string;\r\n  skills: Skill[];\r\n}\r\n\r\nexport const skillsData: SkillCategory[] = [\r\n  {\r\n    category: \"Languages\",\r\n    skills: [\r\n      { name: \"JavaScript\", iconUrl: \"/images/skills/javascript.webp\" },\r\n      { name: \"TypeScript\", iconUrl: \"/images/skills/typescript.webp\" },\r\n      { name: \"Python\", iconUrl: \"/images/skills/python.webp\" },\r\n      { name: \"Java\", iconUrl: \"/images/skills/java.webp\" },\r\n    ],\r\n  },\r\n  {\r\n    category: \"Frameworks & Libraries\",\r\n    skills: [\r\n      { name: \"React\", iconUrl: \"/images/frameworks/react.webp\" },\r\n      { name: \"Angular\", iconUrl: \"/images/frameworks/angular.webp\" },\r\n      { name: \"Spark\", iconUrl: \"/images/others/spark.png\" },\r\n      { name: \"Table Format\", iconUrl: \"/images/others/openfil.webp\" },\r\n    ],\r\n  },\r\n  {\r\n    category: \"Tools & Platforms\",\r\n    skills: [\r\n      { name: \"Docker\", iconUrl: \"/images/others/docker.svg\" },\r\n      { name: \"Azure\", iconUrl: \"/images/others/azure.svg\" },\r\n      { name: \"Firebase\", iconUrl: \"/images/others/firebase.webp\" },\r\n      { name: \"MongoDB\", iconUrl: \"/images/others/mongo.webp\" },\r\n      { name: \"PostgreSQL\", iconUrl: \"/images/others/postgre.webp\" },\r\n    ],\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport \"./SkillsSection.scss\";\r\nimport { skillsData } from \"../data/skillsData\"; // Corrected import path\r\n\r\ninterface SkillsSectionProps {\r\n  id?: string;\r\n}\r\n\r\nconst SkillsSection: React.FC<SkillsSectionProps> = ({ id }) => {\r\n  return (\r\n    <section id={id} className=\"skills-section-container py-5\">\r\n      <Container>\r\n        <h2 className=\"text-center mb-5 display-5 fw-bold\">\r\n          My <span className=\"highlight\">Skills</span>\r\n        </h2>\r\n        {skillsData.map((category, index) => (\r\n          <div key={index} className=\"mb-5\">\r\n            <h3 className=\"text-center mb-4 skill-category-title\">\r\n              {category.category}\r\n            </h3>\r\n            <Row\r\n              xs={2}\r\n              sm={3}\r\n              md={4}\r\n              lg={6}\r\n              className=\"g-4 justify-content-center\"\r\n            >\r\n              {category.skills.map((skill, skillIndex) => (\r\n                <Col key={skillIndex}>\r\n                  <Card className=\"skill-card neumorphic-embossed h-100 d-flex flex-column align-items-center justify-content-center text-center p-3\">\r\n                    <Card.Img\r\n                      variant=\"top\"\r\n                      src={`${process.env.PUBLIC_URL}/assets${skill.iconUrl}`}\r\n                      alt={skill.name}\r\n                      className=\"skill-icon mb-2\"\r\n                    />\r\n                    <Card.Text className=\"fw-bold mb-0\">{skill.name}</Card.Text>\r\n                  </Card>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </div>\r\n        ))}\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SkillsSection;\r\n","import React from 'react';\r\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\r\nimport { GitHub, Linkedin, Mail } from 'react-feather';\r\nimport './ContactSection.scss';\r\n\r\ninterface ContactSectionProps {\r\n  id?: string;\r\n}\r\n\r\nconst ContactSection: React.FC<ContactSectionProps> = ({ id }) => {\r\n  return (\r\n    <section id={id} className=\"contact-section-container py-5\">\r\n      <Container>\r\n        <h2 className=\"text-center mb-5 display-5 fw-bold\">\r\n          Get in <span className=\"highlight\">Touch</span>\r\n        </h2>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md={8} lg={6}>\r\n            <p className=\"text-center mb-4 lead\">\r\n              I'm always open to new opportunities and collaborations. Feel free to reach out!\r\n            </p>\r\n            <div className=\"d-flex justify-content-center mb-5 social-links\">\r\n              <Button\r\n                variant=\"link\"\r\n                href=\"https://github.com/ramHruday\" // Replace with your GitHub URL\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"neumorphic-embossed-icon mx-3 p-3\"\r\n              >\r\n                <GitHub size={30} />\r\n              </Button>\r\n              <Button\r\n                variant=\"link\"\r\n                href=\"https://www.linkedin.com/in/rama-hrudayb/\" // Replace with your LinkedIn URL\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"neumorphic-embossed-icon mx-3 p-3\"\r\n              >\r\n                <Linkedin size={30} />\r\n              </Button>\r\n              <Button\r\n                variant=\"link\"\r\n                href=\"mailto:ramahrudaybandaru@gmail.com\" // Replace with your email address\r\n                className=\"neumorphic-embossed-icon mx-3 p-3\"\r\n              >\r\n                <Mail size={30} />\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContactSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Home, User, Folder, Award, Mail, GitHub, Linkedin } from 'react-feather';\r\nimport { NavHashLink } from 'react-router-hash-link';\r\nimport './SideNavigation.scss';\r\n\r\nconst navLinks = [\r\n  { to: '#home', icon: Home, label: 'Home' },\r\n  { to: '#about', icon: User, label: 'About' },\r\n  { to: '#projects', icon: Folder, label: 'Projects' },\r\n  { to: '#skills', icon: Award, label: 'Skills' },\r\n  { to: '#contact', icon: Mail, label: 'Contact' },\r\n];\r\n\r\nconst socialLinks = [\r\n  { to: 'https://github.com/ramHruday', icon: GitHub, label: 'GitHub' }, // Replace with your GitHub\r\n  { to: 'https://www.linkedin.com/in/rama-hrudayb/', icon: Linkedin, label: 'LinkedIn' }, // Replace with your LinkedIn\r\n];\r\n\r\nconst SideNavigation: React.FC = () => {\r\n  const [activeHash, setActiveHash] = useState('#home');\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const sections = navLinks.map(link => document.getElementById(link.to.substring(1)));\r\n      const scrollPosition = window.scrollY + window.innerHeight / 2;\r\n\r\n      for (let i = sections.length - 1; i >= 0; i--) {\r\n        const section = sections[i];\r\n        if (section && section.offsetTop <= scrollPosition) {\r\n          setActiveHash(navLinks[i].to);\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    handleScroll(); // Set active section on initial load\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"side-navigation-container position-fixed d-none d-md-flex flex-column justify-content-between h-100 p-3\">\r\n      <div className=\"nav-links d-flex flex-column align-items-center\">\r\n        {navLinks.map((link) => (\r\n          <NavHashLink \r\n            key={link.to}\r\n            smooth \r\n            to={link.to}\r\n            className={`nav-item neumorphic-embossed-icon p-3 mb-3 ${activeHash === link.to ? 'active' : ''}`}\r\n            aria-label={link.label}\r\n          >\r\n            <link.icon size={20} />\r\n          </NavHashLink>\r\n        ))}\r\n      </div>\r\n      <div className=\"social-links d-flex flex-column align-items-center\">\r\n        {socialLinks.map((link) => (\r\n          <a \r\n            key={link.to}\r\n            href={link.to} \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\" \r\n            className=\"neumorphic-embossed-icon p-3 mb-3\"\r\n            aria-label={link.label}\r\n          >\r\n            <link.icon size={20} />\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SideNavigation;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nexport type Theme = 'light-mode' | 'dark-mode';\r\n\r\nexport interface ThemeContextState {\r\n  toggleTheme: () => void;\r\n  theme: Theme;\r\n}\r\n\r\nconst ThemeContext = React.createContext<ThemeContextState>(null!);\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n\r\nexport const ThemeContextProvider: React.FC = ({ children }) => {\r\n  const [isLight, setIsLight] = useState(() => {\r\n    // Initialize theme based on system preference or a stored value\r\n    const storedTheme = localStorage.getItem('theme');\r\n    if (storedTheme) {\r\n      return storedTheme === 'light-mode';\r\n    }\r\n    return window.matchMedia('(prefers-color-scheme: light)').matches;\r\n  });\r\n\r\n  useEffect(() => {\r\n    const currentTheme = isLight ? 'light-mode' : 'dark-mode';\r\n    document.body.className = currentTheme; // Set the class on body\r\n    localStorage.setItem('theme', currentTheme); // Store preference\r\n  }, [isLight]);\r\n\r\n  const toggleTheme = () => {\r\n    setIsLight(prevIsLight => !prevIsLight);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{ theme: isLight ? 'light-mode' : 'dark-mode', toggleTheme }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Sun, Moon } from 'react-feather';\r\nimport { useTheme } from '../contexts/theme-context'; // Import useTheme hook\r\nimport './ThemeToggleButton.scss';\r\n\r\nconst ThemeToggleButton: React.FC = () => {\r\n  const { theme, toggleTheme } = useTheme();\r\n\r\n  return (\r\n    <button \r\n      onClick={toggleTheme} \r\n      className=\"theme-toggle-button neumorphic-embossed-icon p-3 mb-3\"\r\n      aria-label=\"Toggle theme\"\r\n    >\r\n      {theme === 'light-mode' ? <Moon size={20} /> : <Sun size={20} />}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggleButton;\r\n","import React from 'react';\r\nimport HeroSection from './HeroSection'; // Import HeroSection\r\nimport AboutSection from './AboutSection'; // Import AboutSection\r\nimport ProjectSection from './ProjectSection'; // Import ProjectSection\r\nimport SkillsSection from './SkillsSection'; // Import SkillsSection\r\nimport ContactSection from './ContactSection'; // Import ContactSection\r\nimport SideNavigation from './SideNavigation'; // Import SideNavigation\r\nimport ThemeToggleButton from './ThemeToggleButton'; // Import ThemeToggleButton\r\n\r\nconst LandingPage: React.FC = () => {\r\n  return (\r\n    <div className=\"landing-page-container\">\r\n      <SideNavigation /> {/* Render SideNavigation */}\r\n      <ThemeToggleButton /> {/* Render ThemeToggleButton at the top level */}\r\n      <div className=\"main-content\">\r\n        <HeroSection id=\"home\" /> {/* Render HeroSection */}\r\n        <AboutSection id=\"about\" /> {/* Render AboutSection */}\r\n        <ProjectSection id=\"projects\" /> {/* Render ProjectSection */}\r\n        <SkillsSection id=\"skills\" /> {/* Render SkillsSection */}\r\n        <ContactSection id=\"contact\" /> {/* Render ContactSection */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport LandingPage from \"./components/LandingPage\"; // Import the new LandingPage component\r\nimport { ThemeContextProvider } from \"./contexts\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <ThemeContextProvider>\r\n      <LandingPage /> {/* Render the new LandingPage component */}\r\n    </ThemeContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.scss';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// import 'typeface-roboto';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/rh-dev\">\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}